= hidden_field_tag :page, params[:page]
%table.table
  %thead
    %tr
      %td Código interno
      %td 
        Hitoria clínica 
        -if cannot? :manage, Authorization
          (ASIGNAR)
      %td DNI
      %td Nombre de Aseguradora
      %td Nombre de Paciente
      %td Estado
      %td Posee Facturas
      - if can? :manage, PayDocument
        %td Ver Facturas
      %td Diagnósticos
      %td Fecha de creación
      %td Link hacia autorización
  %tbody
    - @authorizations.each do |a|
      - if a.status.nil?
        - clase = ''
      - else
        - clase = get_color(a.status.code)
      %tr{id: a.id, class: clase}
        %td
          %strong
            = form_tag(update_intern_code_path, method: 'post', role: 'form', remote: true) do
              = hidden_field_tag :authorization_id, a.id
              = hidden_field_tag :page, params[:page]
              = text_field_tag :intern_code, a.intern_code, class: 'form-control'
        - unless a.patient.nil?
          - if a.patient.clinic_history_code.nil?
            %td No posee, por favor corregir
            - if a.patient.document_identity_code.nil? or a.patient.document_identity_code == ''
              %td Corregir DNI
            - else
              %td
                - if can? :manage, Authorization
                  = form_tag(update_dni_authorization_path, method: 'post', role: 'form', remote: true) do
                    = hidden_field_tag :id, a.id
                    = hidden_field_tag :page, params[:page]
                    = text_field_tag :document_identity_code, a.patient.document_identity_code.strip, class: 'form-control'
                - else
                  = a.patient.document_identity_code.to_s
          - else
            %td
              - if can? :manage, Authorization
                = form_tag(update_history_code_path, method: 'post', role: 'form', remote: true) do
                  = hidden_field_tag :id, a.id
                  = hidden_field_tag :page, params[:page]
                  = text_field_tag :clinic_history_code, a.patient.clinic_history_code.strip, class: 'form-control'
              - else
                =link_to a.patient.clinic_history_code.to_s, asign_to_me_path(id: a.id), method: 'post', remote: true
            - if a.patient.document_identity_code.nil? or a.patient.document_identity_code == ''
              %td Corregir DNI
            - else
              %td
                - if can? :manage, Authorization
                  = form_tag(update_dni_authorization_path, method: 'post', role: 'form', remote: true) do
                    = hidden_field_tag :id, a.id
                    = hidden_field_tag :page, params[:page]
                    = text_field_tag :document_identity_code, a.patient.document_identity_code.strip, class: 'form-control'
                - else
                  = a.patient.document_identity_code.to_s
        - if a.patient.nil?
          %td
          %td
            = button_tag 'Corregir', class: 'btn btn-primary col-md-12', data: { toggle: 'modal', target: '#AuthorizationEditModal'+a.id.to_s }
            .modal.fade{"aria-hidden" => "true", "aria-labelledby" => "myModalLabel", :role => "dialog", :tabindex => "-1", :id => "AuthorizationEditModal#{a.id}"}
              .modal-dialog
                .modal-content
                  .list-group
                    = render 'fix_name', authorization: a
        - else
          - unless a.patient.nil?
            %td= a.patient.insured.insurance.name unless a.patient.insured.nil? rescue 'error en aseguradora'
            %td= link_to to_name_i(a.patient), show_patient_path(id: a.patient.id)
            %td= select_tag :status_id, options_for_select(@statuses), prompt: 'Sin seleccionar', class: 'form-control'
          -else
            %td
              = select_tag :status_id, options_for_select(@statuses, a.status.id), prompt: 'Sin seleccionar' , class: 'form-control'
              = hidden_field_tag :authorization_id, a.id
        - if a.pay_documents.exists?
          %td Si
        - else
          %td No
        - if can? :manage, PayDocument
          %td
            .dropdown
              %button#dropdownMenu1.btn.btn-default.dropdown-toggle{"data-toggle" => "dropdown", :type => "button"}
                Ver Facturas
                %span.caret
              %ul.dropdown-menu{"aria-labelledby" => "dropdownMenu1", :role => "menu"}
                - a.pay_documents.each do |p|
                  %li{:role => "presentation"}= link_to 'Factura '+ p.code, ready_principal_facturation_path(pay_document_id: p.id), role: 'menuitem', tabindex: '-1' if can? :manage, PayDocument
                  %li.disabled{:role => "presentation"}= link_to 'Factura '+ p.code, ready_principal_facturation_path(pay_document_id: p.id), role: 'menuitem', tabindex: '-1', remote: true, class: 'disabled' if cannot? :manage, PayDocument
        %td
          .dropdown
            %button#dropdowndiagnostics.btn.btn-default.dropdown-toggle{"data-toggle" => "dropdown", :type => "button"}
              Ver Diagnósticos
              %span.caret
            %ul.dropdown-menu{"aria-labelledby" => "dropdowndiagnostics", :role => "menu"}
              %li{:role => "presentation"}
                = link_to a.first_diagnostic.to_s, '#' , role: 'menuitem', tabindex: '-1'
              %li{:role => "presentation"}
                = link_to a.second_diagnostic.to_s, '#' , role: 'menuitem', tabindex: '-1'
              %li{:role => "presentation"}
                = link_to a.third_diagnostic.to_s, '#' , role: 'menuitem', tabindex: '-1'
        %td
          - my_date = a.date + 5.hours
          = my_date.strftime('%d-%m-%Y') + ' ' + my_date.strftime('%H:%M:%S')
        - if a.code != nil
          %td
            - if a.employee.nil?
              - name = 'Sin asignar'
            - else
              - name = a.employee.username.to_s
            %button.btn.btn-default{id: 'btn' + a.id.to_s,type: 'button', title: name, data: {placement: 'bottom', toggle: 'tooltip'}}= link_to 'ir a '+ a.code, show_authorization_path(id: a.id)
%br/
%center= will_paginate @insureds, renderer: BootstrapPagination::Rails
